---

- name: Define nodejs_install_npm_user
  ansible.builtin.set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_user is not defined

- name: Create npm global directory for {{ nodejs_install_npm_user }}
  ansible.builtin.file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ nodejs_install_npm_user }}"
    group: "{{ nodejs_install_npm_user }}"
    state: directory
    mode: 0755

- name: Add npm_config_prefix bin directory to global $PATH.
  ansible.builtin.template:
    src: npm.sh.j2
    dest: /etc/profile.d/npm.sh
    mode: 0644
  when: nodejs_generate_etc_profile

- name: Ensure dependencies are present.
  ansible.builtin.apt:
    name:
      - gnupg2
    state: present

- name: Remove old apt repository files {{ nodejs_version }}
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /etc/apt/sources.list.d/deb_nodesource_com_node_{{ nodejs_version | replace(".", "_") }}.list
    - /etc/apt/trusted.gpg.d/nodejs.asc

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/deb822_repository_module.html
- name: Add nodesource apt repository
  ansible.builtin.deb822_repository:
    name: nodesource
    uris: "{{ nodejs_apt_url }}"
    types: deb
    suites: "{{ nodejs_apt_suites }}"
    components: "{{ nodejs_apt_components }}"
    signed_by: "{{ nodejs_apt_key_url }}"
    state: present
  register: node_repo

- name: Update apt cache
  apt:
    update_cache: true
  when: node_repo.changed
  tags:
    - skip_ansible_lint

- name: Ensure Node.js and npm are installed.
  ansible.builtin.apt:
    name: "nodejs={{ nodejs_version | regex_replace('x', '') }}*"
    state: present

- name: Set prefix for npm (root)
  ansible.builtin.command: npm config set prefix {{ npm_config_prefix_root }}
  when: npm_config_prefix_root is defined

- name: Ensuce global package directory exists
  ansible.builtin.file:
    path: '{{ npm_config_prefix }}/lib/node_modules'
    state: directory
    mode: 0755

- name: Ensure npm global packages are installed.
  community.general.npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    state: "{{ item.state | default('present') }}"
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  loop: "{{ nodejs_npm_global_packages }}"

- name: Install packages defined in a given package.json.
  community.general.npm:
    path: "{{ nodejs_package_json_path }}"
  when:
    - nodejs_package_json_path is defined
    - nodejs_package_json_path
