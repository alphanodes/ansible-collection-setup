---

- name: Define nodejs_install_npm_user
  ansible.builtin.set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_user is not defined

- name: Create npm global directory for {{ nodejs_install_npm_user }}
  ansible.builtin.file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ nodejs_install_npm_user }}"
    group: "{{ nodejs_install_npm_user }}"
    state: directory
    mode: 0755

- name: Add npm_config_prefix bin directory to global $PATH.
  ansible.builtin.template:
    src: npm.sh.j2
    dest: /etc/profile.d/npm.sh
    mode: 0644
  when: nodejs_generate_etc_profile

- name: Ensure dependencies are present.
  ansible.builtin.apt:
    name:
      - gnupg2
    state: present

- name: Add Nodesource apt key.
  ansible.builtin.get_url:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    dest: '{{ nodejs_gpg_trusted_file }}'
    mode: 0644
    force: true

- name: Add NodeSource repositories for Node.js {{ nodejs_version }}
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
  loop:
    - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
  register: node_repo

- name: Update apt cache if repo was added.
  apt:
    update_cache: true
  when: node_repo.changed
  tags:
    - skip_ansible_lint

- name: Ensure Node.js and npm are installed.
  ansible.builtin.apt:
    name: "nodejs={{ nodejs_version | regex_replace('x', '') }}*"
    state: present

- name: Set prefix for npm (root)
  ansible.builtin.command: npm config set prefix {{ npm_config_prefix_root }}
  when: npm_config_prefix_root is defined

- name: Ensuce global package directory exists
  ansible.builtin.file:
    path: '{{ npm_config_prefix }}/lib/node_modules'
    state: directory
    mode: 0755

- name: Ensure npm global packages are installed.
  community.general.npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    state: "{{ item.state | default('present') }}"
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  loop: "{{ nodejs_npm_global_packages }}"

- name: Install packages defined in a given package.json.
  community.general.npm:
    path: "{{ nodejs_package_json_path }}"
  when:
    - nodejs_package_json_path is defined
    - nodejs_package_json_path
