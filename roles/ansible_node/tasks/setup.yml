---

- name: Be sure ansible not installed with debian packages
  ansible.builtin.apt:
    name: '{{ ansible_node_disallowed_packages }}'
    state: absent

- name: Include python role
  ansible.builtin.include_role:
    name: alphanodes.setup.python
    public: true

- name: Be sure ansible and pip requirements are installed
  ansible.builtin.apt:
    name: '{{ ansible_node_packages }}'
    state: present

- name: Remove ansible (required to switch from 2.9)
  ansible.builtin.pip:
    name: '{{ item }}'
    state: absent
  when: ansible_node_remove_before_install
  loop:
    - ansible
    - ansible-core

- name: Remove old files (used by remove_before_install
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop: '{{ ansible_node_old_files }}'

- name: Install ansible
  ansible.builtin.pip:
    name: ansible
    version: "{{ ansible_node_ansible_version }}"
    state: present
    virtualenv: '{{ ansible_pip_venv_path }}'
    virtualenv_site_packages: '{{ python_pip_virtualenv_site_packages }}'

- name: Install additional pip modules
  ansible.builtin.pip:
    name: '{{ ansible_node_pip_packages }}'
    state: '{{ python_pip_default_state }}'
    virtualenv: '{{ ansible_pip_venv_path }}'
    virtualenv_site_packages: '{{ python_pip_virtualenv_site_packages }}'

- name: Check if ansible configuration directory exist
  ansible.builtin.file:
    path: '{{ ansible_node_etc_dir }}'
    state: directory
    mode: '0755'

- name: Check if ansible playbooks directory exist
  ansible.builtin.file:
    path: '{{ ansible_node_playbook_dir }}'
    state: directory
    mode: '0755'

- name: Ansible configuration
  ansible.builtin.template:
    src: ansible.j2
    dest: /etc/ansible/ansible.cfg
    mode: '0644'

- name: Install ansible roles
  ansible.builtin.command: "{{ ansible_node_playbook_galaxy_script }} role {{ item.action | default('install') }} {{ item.name }}"
  loop: '{{ ansible_node_roles | default([]) }}'
  when: ansible_node_identifier | length > 0

- name: Install ansible collections
  ansible.builtin.command: "{{ ansible_node_playbook_galaxy_script }} collection {{ item.action | default('install') }} {{ item.name }}"
  loop: '{{ ansible_node_collections | default([]) }}'
  when: ansible_node_identifier | length > 0

- name: Remove obsolete ansible roles
  ansible.builtin.file:
    path: "{{ ansible_node_etc_dir }}/roles"
    state: absent

- name: Remove obsolete ansible cronjobs
  ansible.builtin.file:
    path: /etc/cron.d/{{ item }}
    state: absent
  loop:
    - system-watch
    - redmine_reminder
    - redmine_maintenance
    - postgres_vacuum
    - backup
    - ansible_jobs
