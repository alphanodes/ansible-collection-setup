---
- name: Be sure postgreSQL client packages (prerequire) are installed
  ansible.builtin.apt:
    name: '{{ postgresql_client_packages_prerequire }}'
    state: present

- name: Remove old apt repository files
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /etc/apt/sources.list.d/apt_postgresql_org_pub_repos_apt.list
    - /etc/apt/trusted.gpg.d/postgresql.asc

# see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/deb822_repository_module.html
- name: Add postgresql apt repository
  ansible.builtin.deb822_repository:
    name: postgresql
    uris: '{{ postgresql_apt_url }}'
    types: deb
    suites: '{{ postgresql_apt_suites }}'
    components: '{{ postgresql_apt_components }}'
    signed_by: '{{ postgresql_apt_key_url }}'
    state: present
  register: postgres_repo

- name: Update apt cache
  apt:
    update_cache: true
  when: postgres_repo.changed
  tags:
    - skip_ansible_lint

- name: Be sure postgreSQL client packages are installed
  ansible.builtin.apt:
    name: '{{ postgresql_client_packages }}'
    state: present

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Check if PHP package is required
  ansible.builtin.set_fact:
    php_installed: "{{ true if postgresql_client_check_php_package in ansible_facts.packages else false }}"

- name: Install PHP package (if required)
  ansible.builtin.apt:
    name: '{{ postgresql_client_php_package }}'
    state: present
  when: php_installed
