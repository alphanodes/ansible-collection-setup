---

- name: Check if MySQL packages were installed.
  ansible.builtin.set_fact:
    mysql_install_packages: "{{ deb_mysql_install_packages is defined and deb_mysql_install_packages.changed }}"

- name: Check if MySQL is already installed.
  ansible.builtin.stat:
    path: "{{ mysql_config_file }}"
  register: mysql_installed

- name: Update apt cache if MySQL is not yet installed.
  ansible.builtin.apt:
    update_cache: true
  changed_when: false
  when: not mysql_installed.stat.exists

- name: Ensure MySQL packages are installed.
  ansible.builtin.apt:
    name: "{{ mysql_packages }}"
    state: present
    policy_rc_d: 101
  register: deb_mysql_install_packages

# Because Ubuntu starts MySQL as part of the install process, we need to stop
# mysql and remove the logfiles in case the user set a custom log file size.
- name: Ensure MySQL is stopped after initial install.
  ansible.builtin.systemd:
    name: "{{ mysql_daemon }}"
    state: stopped
  when: not mysql_installed.stat.exists

- name: Delete innodb log files created by apt package after initial install.
  ansible.builtin.file:
    path: "{{ mysql_datadir }}/{{ item }}"
    state: absent
  loop:
    - ib_logfile0
    - ib_logfile1
  when: not mysql_installed.stat.exists

- name: Install debian.cnf for debian maintenance
  ansible.builtin.template:
    src: debian.cnf.j2
    dest: /etc/mysql/debian.cnf
    mode: '0600'
    owner: root
    group: root

- name: Logrotate support for mysql-server
  ansible.builtin.copy:
    src: etc/logrotate.d/mysql-server
    dest: /etc/logrotate.d/mysql-server
    mode: '0644'
    owner: root
    group: root
  when: >
    mysql_log_output == 'FILE'
    and ansible_distribution == 'Debian'
    and mysql_with_mysql_com

- name: Disable logrotate support for mysql-server
  ansible.builtin.file:
    path: /etc/logrotate.d/mysql-server
    state: absent
  when: >
    mysql_log_output != 'FILE'
    or (ansible_distribution == 'Debian' and not mysql_with_mysql_com)

- name: Add mysql user to ssl-cert group
  ansible.builtin.user:
    name: mysql
    groups: ssl-cert
    append: true
  when: mysql_with_ssl

- name: Setup apparmor for mysql tmp_dir
  ansible.builtin.copy:
    src: usr.sbin.mysqld
    dest: /etc/apparmor.d/local/usr.sbin.mysqld
    owner: root
    group: root
    mode: '0644'
  when: ansible_distribution == 'Ubuntu'

- name: Include configure tasks
  ansible.builtin.include_tasks: configure.yml

- name: Include secure installation tasks
  ansible.builtin.include_tasks: secure-installation.yml

- name: Include replication tasks
  ansible.builtin.include_tasks: replication.yml

- name: Include mysqltuner tasks
  ansible.builtin.include_tasks: mysqltuner.yml

- name: Include zabbix tasks
  ansible.builtin.include_tasks: zabbix.yml
  tags:
    - mysql
    - zabbix
    - zabbix-agent
