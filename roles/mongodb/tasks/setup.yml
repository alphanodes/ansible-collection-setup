---

- name: Check value of variable mongodb_net_ssl_host
  ansible.builtin.fail:
    msg: 'Set mongodb_net_ssl_mode is preferSSL or set valid hostname for mongodb_net_ssl_host!'
  when: ( mongodb_net_ssl_mode == 'requireSSL'
          and mongodb_net_ssl_host | length == 0 )

- name: Check value of variable mongodb_login_host
  ansible.builtin.fail:
    msg: 'Set mongodb_login_host equal mongodb_net_ssl_host!'
  when: ( mongodb_net_ssl_mode == 'requireSSL'
          and mongodb_net_ssl_host != mongodb_login_host
          and not mongodb_replication_replset )

- name: Include installation tasks
  ansible.builtin.include_tasks: install.yml

- name: Include tasks for disable transparent huge pages on systemd systems
  ansible.builtin.include_tasks: disable_transparent_hugepages.yml

- name: Include configuration.yml
  ansible.builtin.include_tasks: configure.yml

- name: Include replication and auth configuration
  ansible.builtin.include_tasks: replication_init_auth.yml
  when: ( mongodb_replication_replset | length > 0
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )

- name: Include replication configuration
  ansible.builtin.include_tasks: replication.yml
  when: mongodb_replication_replset | length > 0

- name: Check whether admin user is already exist
  ansible.builtin.command: >
    mongo --quiet {{ '--ssl --host ' + mongodb_net_ssl_host if mongodb_net_ssl_mode == 'requireSSL' else '' }} -u {{ mongodb_user_admin_name }} \
          -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin
  register: mongodb_user_admin_check
  changed_when: false
  check_mode: false
  ignore_errors: true
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset )
  no_log: true

- name: Include authorization configuration
  ansible.builtin.include_tasks: auth_initialization.yml
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset
          and mongodb_user_admin_check.rc != 0 )

- name: Create normal users with replicaset
  community.mongodb.mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_login_port | default(27017) }}"
    login_host: "{{ mongodb_login_host | default('localhost') }}"
    ssl: "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"
  with_items:
    - "{{ mongodb_users | default([]) }}"
  when: ( mongodb_replication_replset
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )

- name: Create normal users without replicaset
  community.mongodb.mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_net_port | int }}"
    login_host: "{{ mongodb_login_host | default('localhost') }}"
    ssl: "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"
  with_items:
    - "{{ mongodb_users | default([]) }}"
  when: ( mongodb_security_authorization == 'enabled'
          and not mongodb_replication_replset )

- name: Create oplog user with replicaset
  community.mongodb.mongodb_user:
    database: admin
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles:
      - db: local
        role: read
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_login_port | default(27017) }}"
    login_host: "{{ mongodb_login_host | default('localhost') }}"
    ssl: "{{ True if mongodb_net_ssl_mode == 'requireSSL' else False }}"
  with_items:
    - "{{ mongodb_oplog_users | default([]) }}"
  when: ( mongodb_replication_replset | length > 0
        and mongodb_security_authorization == 'enabled'
        and mongodb_master is defined and mongodb_master )

- name: Service started
  ansible.builtin.systemd:
    name: "{{ mongodb_daemon_name }}"
    state: started
    enabled: true

- name: Include MMS Agent configuration
  ansible.builtin.include_tasks: mms-agent.yml
  when: mongodb_mms_api_key | length > 0
