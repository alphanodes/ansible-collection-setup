---
- name: Establish some role-related facts
  ansible.builtin.set_fact:
    mongodb_major_version: "{{ mongodb_version[0:3] | string }}"

- name: Mongodb-org block
  when: mongodb_package == 'mongodb-org'
  block:
    - name: Remove old apt repository files
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      loop:
        - /etc/apt/sources.list.d/repo_mongodb_org_apt_debian.list
        - /etc/apt/trusted.gpg.d/mongodb.asc

    # see https://docs.ansible.com/ansible/latest/collections/ansible/builtin/deb822_repository_module.html
    - name: Add mongodb apt repository
      ansible.builtin.deb822_repository:
        name: mongodb
        uris: '{{ mongodb_apt_url }}'
        types: deb
        suites: '{{ mongodb_apt_suites }}'
        components: '{{ mongodb_apt_components }}'
        signed_by: '{{ mongodb_apt_key_url }}'
        state: present
      register: mongo_repo

    - name: Update apt cache
      apt:
        update_cache: true
      when: mongo_repo.changed
      tags:
        - skip_ansible_lint

- name: Install MongoDB package
  ansible.builtin.apt:
    name: "{{ item }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}"
    state: present
  loop:
    - "{{ mongodb_package }}"
    - "{{ mongodb_package }}-database-tools-extra"
    - "{{ mongodb_package }}-mongos"
    - "{{ mongodb_package }}-server"
    - "{{ mongodb_package }}-shell"
    - "{{ mongodb_package }}-tools"
  notify: Restart mongodb

- name: Check if NUMA is available on host
  ansible.builtin.command: "ls -1 /proc/1/numa_maps"
  register: numa_available
  ignore_errors: true
  changed_when: false
  check_mode: false
  when: mongodb_use_numa | bool

- name: Don't use NUMA if it is unavailable on host
  ansible.builtin.set_fact:
    mongodb_use_numa: false
  when:
    - mongodb_use_numa | bool
    - numa_available.rc != 0

- name: Install numactl package
  ansible.builtin.apt:
    name: numactl
    state: present
  when: mongodb_use_numa | bool

- name: Add systemd configuration if present
  ansible.builtin.template:
    src: systemd/mongodb.service.j2
    dest: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    mode: '0644'
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Add symlink for systemd
  ansible.builtin.file:
    src: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    dest: /etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service
    state: link
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Install PyMongo package
  ansible.builtin.apt:
    name: "{{ mongodb_pymongo_package }}"
    state: present
  when: not mongodb_pymongo_from_pip

- name: Using pip
  when: mongodb_pymongo_from_pip
  block:
    - name: Include python role
      ansible.builtin.include_role:
        name: alphanodes.setup.python
      vars:
        python_pip_packages: '{{ mongodb_pymongo_pip_packages }}'
