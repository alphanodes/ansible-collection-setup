{# In alphanodes.setup.nginx/templates/_macros.j2 #}

{% macro listen(
    ssl=false,
    port=none,
    default_server=false,
    ipv6=none,
    http_port='80',
    ssl_port='443',
    ssl_only=false,
    both=false
) -%}

{# Auto-detect IPv6 if not specified #}
{% set use_ipv6 = ipv6 if ipv6 is not none else nginx_with_ipv6 | default(false) -%}

{# Determine ports #}
{% set actual_ssl_port = port if port and ssl else ssl_port -%}
{% set actual_http_port = port if port and not ssl else http_port -%}

{# Build listen options #}
{% if nginx_with_reuseport | default(false) -%}
  {% set ssl_options = nginx_ssl_listen_option ~ ' reuseport' -%}
  {% set http_options = 'reuseport' -%}
{% else -%}
  {% set ssl_options = nginx_ssl_listen_option -%}
  {% set http_options = '' -%}
{% endif -%}

{# SSL + HTTP (dual mode) #}
{% if both or (ssl and not ssl_only) -%}
listen {{ actual_ssl_port }} {{ ssl_options }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_ssl_port }} {{ ssl_options }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% if nginx_with_http3 | default(false) -%}
listen {{ actual_ssl_port }} quic{{ ' reuseport' if nginx_with_reuseport else '' }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_ssl_port }} quic{{ ' reuseport' if nginx_with_reuseport else '' }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% endif -%}
{% if not ssl_only -%}
listen {{ actual_http_port }}{{ ' ' ~ http_options if http_options else '' }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_http_port }}{{ ' ' ~ http_options if http_options else '' }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% endif -%}

{# SSL only #}
{% elif ssl -%}
listen {{ actual_ssl_port }} {{ ssl_options }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_ssl_port }} {{ ssl_options }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% if nginx_with_http3 | default(false) -%}
listen {{ actual_ssl_port }} quic{{ ' reuseport' if nginx_with_reuseport else '' }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_ssl_port }} quic{{ ' reuseport' if nginx_with_reuseport else '' }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% endif -%}

{# HTTP only #}
{% else -%}
listen {{ actual_http_port }}{{ ' ' ~ http_options if http_options else '' }}{{ ' default_server' if default_server else '' }};
{% if use_ipv6 -%}
listen [::]:{{ actual_http_port }}{{ ' ' ~ http_options if http_options else '' }}{{ ' default_server' if default_server else '' }};
{% endif -%}
{% endif -%}
{%- endmacro %}

{% macro modern_protocols() -%}
{% if ansible_distribution == 'Debian' and ansible_distribution_major_version == '13' %}
http2 on;
{% if nginx_with_http3 | default(false) %}
http3 on;
quic_gso on;
ssl_early_data on;
{% endif %}
{% endif %}
{%- endmacro %}

{% macro nginx_ssl_certificates() -%}
{% if instance is defined and instance.letsencrypt is defined and instance.letsencrypt or force_letsencrypt is defined and force_letsencrypt %}
ssl_certificate {{ instance.letsencrypt_cert | default(vhost_letsencrypt_cert) }};
ssl_certificate_key {{ instance.letsencrypt_key | default(vhost_letsencrypt_key) }};
{% if nginx_with_ssl_stapling is undefined or nginx_with_ssl_stapling %}
ssl_trusted_certificate {{ instance.letsencrypt_trusted_cert | default(vhost_letsencrypt_trusted_cert) }};
{% endif %}
{% if (instance.ssl_trusted_certificate is defined or vhost_ssl_trusted_certificate is defined) and (nginx_with_ssl_stapling is undefined or nginx_with_ssl_stapling) %}
ssl_trusted_certificate {{ instance.ssl_trusted_certificate | default(vhost_ssl_trusted_certificate) }};
{% endif %}
{% else %}
ssl_certificate /etc/ssl/certs/{{ instance.vhost_ssl_cert | default(vhost_ssl_cert) }}.crt;
ssl_certificate_key /etc/ssl/private/{{ instance.vhost_ssl_cert | default(vhost_ssl_cert) }}.key;
{% if vhost_ssl_with_trusted_cert is defined and vhost_ssl_with_trusted_cert and (nginx_with_ssl_stapling is undefined or nginx_with_ssl_stapling) %}
ssl_trusted_certificate /etc/ssl/certs/{{ instance.vhost_ssl_cert | default(vhost_ssl_cert) }}_trusted.crt;
{% endif %}
{% endif %}
{% if nginx_force_ssl %}

add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
{% endif %}
{%- endmacro %}

{% macro monitoring() -%}
server {
{{ listen() }}
  server_name localhost;
  include {{ zabbix_addons_dir }}/conf/nginx-server-status.conf;
}
{%- endmacro %}
