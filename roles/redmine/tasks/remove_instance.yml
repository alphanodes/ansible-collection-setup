---

- name: Include instance vars
  ansible.builtin.include_tasks: set_instance_vars.yml

- name: Ensure puma services stopped and disabled - {{ instance_name }}
  ansible.builtin.systemd:
    name: puma-{{ instance_name }}
    enabled: false
    state: stopped
  ignore_errors: true

- name: Remove systemd files - {{ instance_name }}
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ item }}"
    state: absent
  loop:
    - mailcatcher-{{ instance_name }}.service
    - puma-{{ instance_name }}-directory.service
    - puma-{{ instance_name }}-directory.timer
    - puma-{{ instance_name }}.service

- name: Remove sudoer file - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /etc/sudoers.d/{{ instance_name }}

- name: Remove redmine configuration - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_config_dir }}'
    state: absent

- name: Remove nginx configuration - {{ instance_name }}
  ansible.builtin.file:
    path: /etc/nginx/sites-available/{{ instance_name }}.conf
    state: absent
  when: redmine_with_nginx
  notify: Restart nginx

- name: MySQL block - {{ redmine_db_name }}
  when: >
    redmine_with_mysql
    and (instance.adapter is undefined or instance.adapter == 'mysql2')
    and (mysql_replication_role is undefined or mysql_replication_role != 'slave')
  block:
    - name: Remove MySQL DB - {{ instance_name }}
      community.mysql.mysql_db:
        name: '{{ redmine_db_name }}'
        state: absent

    - name: Remove MySQL user - {{ instance_name }}
      community.mysql.mysql_user:
        name: '{{ redmine_db_user }}'
        state: absent
      when: instance.db_skip_user_setup is undefined or not instance.db_skip_user_setup

- name: PostgreSQL block
  when: >
    redmine_with_postgresql
    and instance.adapter is defined
    and instance.adapter == 'postgresql'
  block:
    - name: Remove PostgreSQL database - {{ instance_name }}
      become_user: postgres
      become: true
      community.postgresql.postgresql_db:
        name: '{{ redmine_db_name }}'
        state: absent

    - name: Remove PostgreSQL role - {{ instance_name }}
      become_user: postgres
      become: true
      community.postgresql.postgresql_user:
        name: '{{ redmine_db_user }}'
        state: absent
      when: instance.db_skip_user_setup is undefined or not instance.db_skip_user_setup

- name: Remove Redmine user - {{ instance_name }}
  ansible.builtin.user:
    name: '{{ redmine_user }}'
    state: absent
    remove: true

- name: Remove redmine directory - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_home }}'
    state: absent
