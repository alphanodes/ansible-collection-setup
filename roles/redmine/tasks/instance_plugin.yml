---

- name: Set plugin - {{ instance_name }}
  ansible.builtin.set_fact:
    plugin: "{{ redmine_plugins_available[plugin_name] }}"

- name: Check for plugin conflicts for {{ plugin_name }}
  ansible.builtin.fail:
    msg: '{{ plugin_name }} has a conflict with {{ item }}'
  when: item in instance.plugins
  loop: '{{ plugin["conflict_plugins"] | default([]) }}'

- name: Remove unwanted plugins for {{ plugin_name }}
  ansible.builtin.file:
    state: absent
    path: '{{ redmine_plugin_dir }}/{{ redmine_plugins_available[item]["target_dir"] | default(item) }}'
  loop: '{{ plugin["remove_plugins"] | default([]) }}'

- name: Remove unwanted plugins assets for {{ plugin_name }}
  ansible.builtin.file:
    path: '{{ redmine_plugin_assets_dir }}/{{ redmine_plugins_available[item]["target_dir"] | default(item) }}'
    state: absent
  loop: '{{ plugin["remove_plugins"] | default([]) }}'

- name: Run remote deploy for plugin - {{ instance_name }}
  ansible.builtin.include_tasks: task_remote_deploy.yml
  vars:
    repo_url: '{{ plugin[preferred_git_url] | default(plugin["url"]) }}'
    repo_dest: '{{ redmine_plugin_dir }}/{{ plugin["target_dir"] | default(plugin_name) }}'
    repo_version: '{{ plugin["dev_version"] if instance.plugin_version is defined and instance.plugin_version == "dev" and plugin["dev_version"] is defined else plugin["version"] }}'
