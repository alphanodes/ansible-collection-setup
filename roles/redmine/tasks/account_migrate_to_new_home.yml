---

# should be removed, when all instances are migrated (realy all!)
- name: Check if files directory exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_files_dir }}'
  register: new_files_dir

- name: Stop if files directory is missing - {{ instance_name }}
  ansible.builtin.fail:
    msg: 'Missing existing files directory "{{ redmine_files_dir }}" - something is wrong!'
  when: not new_files_dir.stat.exists

- name: Check if old schema.rb exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_home }}/db/schema.rb'
  register: old_schema_file

- name: Move schema.rb to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ redmine_home }}/db/schema.rb {{ redmine_app_dir }}/db/schema.rb
  args:
    creates: "{{ redmine_app_dir }}/db/schema.rb"
  when: old_schema_file.stat.exists

- name: Check if old Gemfile.local exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_home }}/Gemfile.local'
  register: old_gemfile_file

- name: Move Gemfile.local to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ redmine_home }}/Gemfile.local {{ redmine_app_dir }}/Gemfile.local
  args:
    creates: "{{ redmine_app_dir }}/Gemfile.local"
  when: old_gemfile_file.stat.exists

- name: Check if old log directory exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_home }}/log'
  register: old_log_dir

- name: Remove new empty log directory  - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_app_dir }}/log'
    state: absent
  when: old_log_dir.stat.exists

- name: Move log to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ old_log_dir.stat.path }} {{ redmine_app_dir }}/log
  when: old_log_dir.stat.exists

- name: Check if old tmp directory exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_home }}/tmp'
  register: old_tmp_dir

- name: Remove new empty tmp directory  - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_app_dir }}/tmp'
    state: absent
  when: old_tmp_dir.stat.exists

- name: Move tmp to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ old_tmp_dir.stat.path }} {{ redmine_app_dir }}/tmp
  when: old_tmp_dir.stat.exists

- name: Check if old plugins directory exists - {{ instance_name }}
  ansible.builtin.stat:
    path: '{{ redmine_home }}/plugins'
  register: old_plugins_dir

- name: Remove new empty plugins directory  - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_plugin_dir }}'
    state: absent
  when: old_plugins_dir.stat.exists

- name: Move plugins to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ old_plugins_dir.stat.path }} {{ redmine_plugin_dir }}
  when: old_plugins_dir.stat.exists

- name: Remove new config directory  - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_app_dir }}/config'
    state: absent

- name: Move config to new location - {{ instance_name }}
  ansible.builtin.command: mv {{ redmine_home }}/config {{ redmine_app_dir }}/config
  args:
    creates: "{{ redmine_app_dir }}/config"

- name: Remove obsolete files/directories from home directory
  ansible.builtin.file:
    path: '{{ redmine_home }}{{ item }}'
    state: absent
  when: redmine_home | length > 0
  loop:
    - /.bzr.log
    - /.git
    - /.github
    - /.gitignore
    - /.hgignore
    - /.rubocop.yml
    - /.rubocop_todo.yml
    - /.stylelintignore
    - /.stylelintrc
    - /.subversion
    - /CONTRIBUTING.md
    - /Gemfile
    - /Gemfile.lock
    - /README.rdoc
    - /Rakefile
    - /app
    - /appveyor.yml
    - /bin
    - /config.ru
    - /db
    - /doc
    - /extra
    - /lib
    - /package.json
    - /public
    - /test
    - /tmp
    - /yarn.lock
- name: Fix permissions for plugins - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ redmine_plugin_dir }}'
    owner: '{{ redmine_user }}'
    group: '{{ redmine_group }}'
    mode: '0755'
    recurse: true
    state: directory
