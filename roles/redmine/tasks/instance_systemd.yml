---

- name: Calc redmine_ruby_system_gem_home - {{ instance_name }}
  when: not redmine_use_rvm
  become: true
  become_user: '{{ redmine_user }}'
  block:
    - name: Get Gem.user_dir
      ansible.builtin.command: ruby -e 'print Gem.user_dir'
      register: gem_info
      changed_when: false

    - name: Set redmine_ruby_system_gem_home
      ansible.builtin.set_fact:
        redmine_ruby_system_gem_home: '{{ gem_info.stdout }}'

    - name: Set redmine_ruby_opt
      ansible.builtin.set_fact:
        redmine_ruby_opt: "{{ instance.ruby_opt | default(redmine_systemd_ruby_opt) }}"

    - name: Make sure redmine_ruby_opt value is set always for system ruby
      ansible.builtin.set_fact:
        redmine_ruby_opt: '-W:no-deprecated -W:no-experimental'
      when: redmine_ruby_opt | length == 0

- name: Set redmine_ruby_opt
  ansible.builtin.set_fact:
    redmine_ruby_opt: "{{ instance.ruby_opt | default(redmine_systemd_ruby_opt) }}"
  when: redmine_use_rvm

- name: Ensure run directory exists after reboot - {{ instance_name }}
  ansible.builtin.include_role:
    name: alphanodes.setup.systemd_timer
  vars:
    timers:
      "{{ puma_service_name }}-directory":
        exec_start: /usr/bin/install -g {{ instance_name }} -o {{ instance_name }} -d {{ redmine_run_base_path }}/{{ instance_name }}
        on_boot_sec: 5s
        before_service: '{{ puma_service_name }}.service'

- name: Install puma systemd service - {{ instance_name }}
  ansible.builtin.template:
    src: etc/systemd/system/puma.service.j2
    dest: "/etc/systemd/system/{{ puma_service_name }}.service"
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload systemd daemon

- name: Flush all handlers at this point
  ansible.builtin.meta: flush_handlers

- name: Ensure puma services start after reboot - {{ instance_name }}
  ansible.builtin.systemd:
    name: '{{ puma_service_name }}'
    enabled: true

- name: Mailcatcher service
  when:
    - instance.with_mailcatcher is defined
    - instance.with_mailcatcher
  block:
    - name: Install mailcatcher systemd configuation - {{ instance_name }}
      ansible.builtin.template:
        src: etc/systemd/system/mailcatcher.service.j2
        dest: "/etc/systemd/system/mailcatcher-{{ instance_name }}.service"
        owner: root
        group: root
        mode: '0644'
      notify:
        - Reload systemd daemon

    - name: Ensure mailcatcher services start after reboot - {{ instance_name }}
      ansible.builtin.systemd:
        name: mailcatcher-{{ instance_name }}
        enabled: true

- name: Uninstall mailcatcher systemd configuation - {{ instance_name }}
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /etc/systemd/system/mailcatcher-{{ instance_name }}.service
    - /etc/systemd/system/multi-user.target.wants/mailcatcher-{{ instance_name }}.service
  when: instance.with_mailcatcher is undefined or not instance.with_mailcatcher
  ignore_errors: true
  notify:
    - Reload systemd daemon
