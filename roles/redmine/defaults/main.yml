# defaults file for redmine
---
redmine_instances: {}

# If not set all instances from redmine_instances are used
# redmine_instance: redmine

redmine_with_mysql: false
# NOTE: if set to false, you have to install libpq-dev manually if you use postgresql server on a remote host
redmine_with_postgresql: false
redmine_with_zsh: true

redmine_mysql_packages:
  - libmysqlclient-dev

redmine_postgresql_packages:
  - libpq-dev

# Default values for a redmine instance (overwrite it in instance hash)

# use ppa:brightbox/ruby-ng
# if no, default system ruby is used
# (only used with ubuntu)
redmine_rvm_apt: false
redmine_rvm_apt_url: https://ppa.launchpadcontent.net/rael-gc/rvm/ubuntu
redmine_rvm_apt_suites: '{{ ansible_distribution_release }}'
redmine_rvm_apt_components: main
redmine_rvm_apt_signed_by: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x8094BB14F4E3FBBE

# @see https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts#postgresql
# @see https://www.postgresql.org/docs/14/runtime-config-client.html#RUNTIME-CONFIG-CLIENT-STATEMENT
redmine_db_statement_timeout: 10000

# redmine_system_infos_vars:
#  - RUBYOPT
redmine_system_infos_vars: []

redmine_system_infos_bool_vars:
  - ENABLE_DEBUG
  - ENABLE_BACKTRACE

# @see https://guides.rubyonrails.org/action_mailer_basics.html
# redmine 5 has problems with local smtp server without ssl
redmine_delivery_method: ':sendmail'

# see https://guides.rubyonrails.org/action_mailer_basics.html
# and https://github.com/mikel/mail/issues/1538
redmine_sendmail_settings_location: /usr/sbin/sendmail
redmine_sendmail_settings_arguments:
  - "-i"

redmine_smtp_address: localhost
redmine_smtp_port: 25
redmine_smtp_tls: false
redmine_smtp_enable_starttls_auto: false

# can be disabled for testing environments (ci)
redmine_with_nginx: true

redmine_with_hedgedoc: false
redmine_with_memcache: true
redmine_memcached_host: '127.0.0.1:11211'

# if instance.vhost_users is defined, use access protection
# NOTE: can be disabled to use protection for e.g. pghero only
redmine_access_protection: false

redmine_default_vhost_users: []

# Set Rails 8 default
# see https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#preserve-timezone-of-the-receiver
# NOTE: this should be fixed in Redmine 6.2 (with Rails 8 support) and removed here
redmine_to_time_preserves_timezone: true

redmine_with_agile: false

# this enables pghero and pg_extras, too
redmine_with_alphanodes_enterprise_support: true

account_migrate_to_new_home: true

redmine_env: production

redmine_proxy_read_timeout: 120
redmine_proxy_connect_timeout: 120

redmine_proxy_buffers: '16 128k'
redmine_proxy_buffer_size: '128k'
redmine_proxy_busy_buffers_size: '256k'

# Used for puma workers and mem_cache_store pool_size
# leave empty auto calculation with amount of cpu processors
redmine_puma_worker_processes: "{{ puma_worker_processes | default(ansible_processor_nproc) }}"

redmine_memcache_expires_hours: 6

# @see https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#workers
redmine_puma_min_threads: "{{ puma_min_threads | default(2) }}"
redmine_puma_max_threads: "{{ puma_max_threads | default(5) }}"

redmine_puma_worker_timeout: "{{ puma_worker_timeout | default(60) }}"

# see https://medium.com/motive-eng/we-solved-our-rails-memory-leaks-with-jemalloc-5c3711326456
redmine_with_jemalloc: true

# see https://api.rubyonrails.org/v5.1/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html
# and https://github.com/boazsegev/plezi/issues/15
# should calculated automatically: redmine_puma_worker_processes * redmine_puma_max_threads
# @see https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server#database-connections
redmine_db_pool: ''

rails_env: production

redmine_vhost_default: false
redmine_vhost_for_zabbix: false

# security setting
redmine_content_security_policy: ''

redmine_repo: 'https://github.com/redmine/redmine.git'
redmine_repo_version: 6.0-stable
redmine_repo_update: true

# set default vhost name
redmine_server_name: redmine.local

# for sockets, pids, etc.
redmine_run_base_path: /run

# adapter: mysql2 or postgresql are supported right now
redmine_db_adapter: mysql2
redmine_db_password: '{{ [ansible_machine_id, ansible_hostname, "redmine"] | join | checksum }}'

redmine_mysql_socket: '{{ redmine_run_base_path }}/mysqld/mysqld.sock'

redmine_no_access_for_register: false

redmine_log_level: warn

redmine_user_config_files:
  - .vimrc

redmine_saml_plugin_name: redmine_saml
redmine_enterprise_support_plugin_name: alphanodes_enterprise_support

# without rugged, which is optional used for redmine_devops
redmine_bundle_exclude_groups: 'development test sqlite xapian rugged'

# log, syslog (default) or journald
redmine_default_logger: syslog

# if not set, all instances are used
# redmine_setup_instance: redmine

redmine_packages:
  - ghostscript
  - gnupg
  - graphviz
  - imagemagick
  - subversion

# This should be default, if system ruby version < 2.7
# e.g. Ubuntu 20.04 or Debian 11 (or newer) can use system ruby
# ! all maintained ubuntu versions are jammy or newer - set true as default
# ! this also requires Redmine 4.2 or newer (because of ruby 2.7)
redmine_use_rvm_as_default: false

# see for ubuntu packages: https://packages.ubuntu.com/focal/ruby
# this is required, if redmine_use_rvm_as_default is true and
# instance.use_rvm: false (system ruby requires ruby-dev)
redmine_with_ruby_dev: false

# overwrite it, if you need it.
# if not set, for system ruby '-W:no-deprecated -W:no-experimental' is used
redmine_systemd_ruby_opt: ''

# default patches - can be overwritten with instance.patches
# redmine_patches:
#  - file: puma
#  - file: queryredmine_patches
redmine_patches:
#  - file: puma
#    strip: 1
  - file: allowed_to_condition
    strip: 1
  - file: watcher_limit
    strip: 1

# set to yes, if git history for ssh is required on deploy
redmine_full_remote_deploy: false

redmine_write_permission_dirs:
  # for creating Gemfile.lock
  - path: ''
  # for creating secret_token.rb
  - path: /config/initializers
  # for creating schema.rb
  - path: /db
  - path: /tmp
  - path: /log

redmine_plugin_access: readonly

redmine_plugin_remove_test_files: false
redmine_plugin_test_files:
  - .eslintignore
  - .eslintrc.yml
  - .flayignore
  - .claudeignore
  - .git
  - .gitignore
  - .gitlab-ci.yml
  - .markdownlint.json
  - .markdownlintignore
  - .overwritten_templates
  - .rails_best_practices.yml
  - .reek.yml
  - .rubocop.yml
  - .slim-lint.yml
  - .stylelintrc.json
  - docs
  - CLAUDE.md
  - DEVELOPMENT.md
  - TESTING.md
  - AGENTS.md
  - CONTRIBUTING.md
  - Gemfile.lock
  - Gemfile.release
  - config/brakeman.ignore
  - eslint.config.mjs
  - package.json
  - test

# https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html
redmine_queue_adapter: async

redmine_async_queue_min_threads: 1
redmine_async_queue_max_threads: 2
redmine_async_queue_idletime: 600.seconds

# used for creating redmine_home = redmine_base_dir/{{ instance_name }}
redmine_base_dir: '{{ srv_path }}'
