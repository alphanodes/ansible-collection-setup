---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Check if nginx is running
      ansible.builtin.service:
        name: nginx
        state: started
      check_mode: true
      register: nginx_service
      failed_when: nginx_service.changed

    - name: Check nginx configuration syntax
      ansible.builtin.command: nginx -t
      register: nginx_syntax
      changed_when: false

    - name: Verify action normalization (no double semicolons)
      ansible.builtin.shell: |
        set -euo pipefail
        awk '/location \/_ping/,/}/ {print}' /etc/nginx/sites-available/ethercalc.conf | grep -E "add_header X-Ping pong;\$|return 204;\$"
      register: normalize_check
      changed_when: false
      failed_when: normalize_check.rc != 0

    - name: Verify additional_headers normalization
      ansible.builtin.shell: |
        set -e
        grep -F 'add_header X-Test-Header "ok";' /etc/nginx/sites-available/ethercalc.conf
        grep -F 'add_header X-Second "yes";' /etc/nginx/sites-available/ethercalc.conf
      register: addhdr_check
      changed_when: false
      failed_when: addhdr_check.rc != 0

    - name: Verify fastcgi_params normalization (rendered but harmless)
      ansible.builtin.shell: |
        set -e
        # fastcgi_param may or may not be present depending on config; accept absence gracefully
        ! grep -q 'fastcgi_param .*;;' /etc/nginx/sites-available/ethercalc.conf
      register: fpmparam_check
      changed_when: false
      failed_when: fpmparam_check.rc != 0

    - name: Verify proxy_headers normalization
      ansible.builtin.shell: |
        set -e
        grep -F 'proxy_set_header X-Forwarded-Proto $scheme;' /etc/nginx/sites-available/ethercalc.conf
      register: proxyhdr_check
      changed_when: false
      failed_when: proxyhdr_check.rc != 0

    - name: Verify proxy_redirect normalization
      ansible.builtin.shell: |
        set -euo pipefail
        awk '/location \/ \{/,/}/ {print}' /etc/nginx/sites-available/ethercalc.conf | grep -E "^\s*proxy_redirect off;\s*$"
      register: proxyredir_check
      changed_when: false
      failed_when: proxyredir_check.rc != 0

    - name: Verify rewrite_lines normalization
      ansible.builtin.shell: |
        set -e
        grep -E '^\s*rewrite \^/old/\(\.\*\) /new/\$1 permanent;\s*$' /etc/nginx/sites-available/ethercalc.conf
      register: rewrite_check
      changed_when: false
      failed_when: rewrite_check.rc != 0

    - name: Check if ethercalc vhost config exists
      ansible.builtin.stat:
        path: /etc/nginx/sites-available/ethercalc.conf
      register: ethercalc_vhost

    - name: Verify ethercalc vhost is enabled
      ansible.builtin.stat:
        path: /etc/nginx/sites-enabled/ethercalc.conf
      register: ethercalc_enabled

    - name: Check nginx proxy configuration is valid
      ansible.builtin.lineinfile:
        path: /etc/nginx/sites-available/ethercalc.conf
        line: "proxy_pass http://127.0.0.1:8000;"
        state: absent
      check_mode: true
      register: proxy_config
      failed_when: proxy_config.changed

    - name: Test that nginx accepts connections (basic connectivity)
      ansible.builtin.wait_for:
        port: 80
        host: localhost
        delay: 1
        timeout: 10
      register: nginx_connection

    - name: Verify nginx_mono templates are self-contained
      ansible.builtin.find:
        paths: /etc/nginx/sites-available/
        patterns: "*.conf"
        contains: "templates/nginx/"
      register: external_refs
      failed_when: external_refs.matched > 0

    - name: Display test results
      ansible.builtin.debug:
        msg:
          - "Nginx service: {{ 'OK' if not nginx_service.changed else 'FAILED' }}"
          - "Nginx syntax: {{ 'OK' if nginx_syntax.rc == 0 else 'FAILED' }}"
          - "Normalize actions: {{ 'OK' if normalize_check.rc == 0 else 'FAILED' }}"
          - "Add headers normalized: {{ 'OK' if addhdr_check.rc == 0 else 'FAILED' }}"
          - "FastCGI params: {{ 'OK' if fpmparam_check.rc == 0 else 'FAILED' }}"
          - "Proxy headers normalized: {{ 'OK' if proxyhdr_check.rc == 0 else 'FAILED' }}"
          - "Proxy redirect normalized: {{ 'OK' if proxyredir_check.rc == 0 else 'FAILED' }}"
          - "Rewrite lines normalized: {{ 'OK' if rewrite_check.rc == 0 else 'FAILED' }}"
          - "Ethercalc vhost exists: {{ 'OK' if ethercalc_vhost.stat.exists else 'FAILED' }}"
          - "Ethercalc enabled: {{ 'OK' if ethercalc_enabled.stat.exists else 'FAILED' }}"
          - "Proxy config: {{ 'OK' if not proxy_config.changed else 'FAILED' }}"
          - "Nginx connectivity: {{ 'OK' if nginx_connection is succeeded else 'FAILED' }}"
          - "No external refs: {{ 'OK' if external_refs.matched == 0 else 'FAILED' }}"
