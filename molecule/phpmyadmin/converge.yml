---
- name: Converge
  hosts: all
  become: true

  pre_tasks:
    - name: Update apt cache.
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      changed_when: false

    - name: Install git (required for phpmyadmin git module)
      ansible.builtin.apt:
        name: git
        state: present

    - name: Create dummy phpmyadmin directory (skip real installation for test)
      ansible.builtin.file:
        path: /usr/share/alphanodes/phpmyadmin
        state: directory
        mode: '0755'

    - name: Initialize git repository (to skip clone in test)
      ansible.builtin.command: git init
      args:
        chdir: /usr/share/alphanodes/phpmyadmin
        creates: /usr/share/alphanodes/phpmyadmin/.git

    - name: Create libraries directory
      ansible.builtin.file:
        path: /usr/share/alphanodes/phpmyadmin/libraries
        state: directory
        mode: '0755'

    - name: Create dummy phpmyadmin files (skip real installation for test)
      ansible.builtin.copy:
        content: |
          <?php
          // Dummy phpmyadmin for testing
          define('CONFIG_DIR', '/etc/phpmyadmin/');
          define('VERSION_CHECK_DEFAULT', false);
        dest: "/usr/share/alphanodes/phpmyadmin/{{ item }}"
        mode: '0644'
      loop:
        - index.php
        - libraries/vendor_config.php

    - name: Configure git repository (origin, commit, tag)
      ansible.builtin.shell: |
        git config user.email "test@test.local"
        git config user.name "Test"
        git remote add origin https://github.com/phpmyadmin/phpmyadmin || true
        git add .
        git commit -m "Initial dummy commit" || true
        git tag RELEASE_5_2_3 || true
      args:
        chdir: /usr/share/alphanodes/phpmyadmin
      changed_when: false

  vars:
    # PHP configuration
    php_version: "8.2"
    php_fpm_base: /run/php/php-fpm
    php_fpm_pools:
      - name: phpmyadmin
        user: www-data
        group: www-data
        pool: phpmyadmin
        skip_user_create: true

    # MySQL client configuration (no server needed for test)
    mysql_client_packages:
      - mariadb-client
      - python3-pymysql

    # nodejs configuration (needed for phpmyadmin build)
    nodejs_install_npm_user: root  # Use root in container tests

    # phpMyAdmin configuration
    phpmyadmin_no_dbserver: true  # Skip database setup (no MySQL server in test)
    phpmyadmin_force_installation: false  # Don't force installation

    # Skip nginx configuration in test
    nginx_user: www-data
    nginx_group: www-data

  roles:
    - role: alphanodes.setup.common
    - role: alphanodes.setup.mysql_client
    - role: alphanodes.setup.php_cli
      vars:
        php_cli_version: "{{ php_version }}"
    - role: alphanodes.setup.php_fpm
      vars:
        php_fpm_version: "{{ php_version }}"
    - role: alphanodes.setup.phpmyadmin
